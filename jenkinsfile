pipeline {
    agent any

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    echo "Node.js version:"
                    node --version
                    echo "NPM version:"
                    npm --version
                    echo "Installing dependencies..."
                    npm ci
                    echo "Building application..."
                    npm run build
                    echo "Build completed. Contents:"
                    ls -la
                '''
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    echo "Checking if build exists..."
                    test -f build/index.html
                    echo "Running tests..."
                    npm test -- --coverage --watchAll=false --testResultsProcessor=jest-junit
                '''
            }
            post {
                always {
                    // Publish test results only if they exist
                    script {
                        if (fileExists('junit.xml')) {
                            junit 'junit.xml'
                        }
                        // Publish coverage if it exists
                        if (fileExists('coverage/lcov.info')) {
                            publishHTML([
                                allowMissing: false,
                                alwaysLinkToLastBuild: false,
                                keepAll: true,
                                reportDir: 'coverage',
                                reportFiles: 'index.html',
                                reportName: 'Coverage Report'
                            ])
                        }
                    }
                }
            }
        }

        stage('E2E') {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    echo "Installing serve package..."
                    npm install serve
                    echo "Starting application server..."
                    node_modules/.bin/serve -s build &
                    sleep 10
                    echo "Running E2E tests..."
                    npx playwright test --reporter=junit
                    echo "E2E tests completed"
                '''
            }
            post {
                always {
                    script {
                        // Publish Playwright test results if they exist
                        if (fileExists('test-results/results.xml')) {
                            junit 'test-results/results.xml'
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed!'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        cleanup {
            echo 'Cleaning up...'
            // Clean up any background processes
            sh '''
                pkill -f "serve" || true
                docker container prune -f || true
            '''
        }
    }
}